<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="bntbackdown.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AABJRU5ErkJggg==
</value>
  </data>
</root>